<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAHudAAB7nQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAEAAAAAAAAAFwAAAGIAAACoAAAA2AAA
        APIAAAD9AAAA/QAAAPIAAADYAAAAqAAAAGIAAAAXAAAAAAAAAAEAAAADAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAMAAAAAAAAAKAAAAJsAAADuAAAA/wAA
        AP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAO4AAACcAAAAKAAAAAAAAAADAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAACQAAAIwAAAD7AAAA/wAA
        AP8AAAD9AAAA/AAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAPwAAAD9AAAA/wAAAP8AAAD7AAAAjQAA
        AAkAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAACUAAADSAAAA/wAA
        APwAAAD7AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA+wAA
        APwAAAD/AAAA0gAAACUAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAzAAAA6wAA
        AP8AAAD6AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/gAAAPoAAAD/AAAA6wAAADQAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAJwAA
        AOoAAAD/AAAA+wAAAP8AAAD/AAAA/wAAAP4AAAD+AAAA/gAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPsAAAD/AAAA6gAAACcAAAAAAAAAAgAAAAAAAAABAAAAAAAA
        AAoAAADOAAAA/wAAAPsAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPsAAAD/AAAAzgAAAAoAAAAAAAAAAQAA
        AAMAAAAAAAAAjAAAAP8AAAD6AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD1AAAA7QAAAO0AAAD1AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPoAAAD/AAAAjAAA
        AAAAAAADAAAAAAAAAC0AAAD6AAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD7AAAA/wAAAHEAAAAFAAAABQAA
        AHEAAAD/AAAA+wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAA
        AP8AAAD6AAAALQAAAAAAAAAAAAAAmgAAAP8AAAD7AAAA/wAAAP8AAAD/AAAA/wAAAPsAAAD/AAAAZgAA
        AAAAAAAAAAAAZgAAAP8AAAD7AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA+wAAAP8AAACaAAAAAAAAABoAAADqAAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA+wAA
        AP8AAABnAAAAAAAAAAAAAABmAAAA/wAAAPkAAAD8AAAA/AAAAPwAAAD+AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAOoAAAAaAAAAYgAAAP8AAAD9AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD7AAAA/wAAAGYAAAAAAAAAAAAAAGYAAAD/AAAA+wAAAP8AAAD/AAAA/wAAAP8AAAD8AAAA/QAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD9AAAA/wAAAGIAAACnAAAA/wAAAPwAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAPsAAAD/AAAAZgAAAAAAAAAAAAAAUAAAANYAAADFAAAAyAAAAMgAAADLAAAA6gAA
        AP8AAAD+AAAA/QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPwAAAD/AAAApgAAANYAAAD/AAAA/gAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA+wAAAP8AAABmAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAALAAAAVQAAAN0AAAD/AAAA/QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAADWAAAA8QAA
        AP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAAAGYAAAAAAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAAEQAAAMoAAAD/AAAA/QAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAA
        APEAAAD9AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPsAAAD/AAAAZgAAAAAAAAADAAAABwAA
        ABMAAAARAAAAEQAAABMAAAALAAAAAAAAAAYAAAAAAAAAJwAAAPMAAAD/AAAA/gAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/QAAAP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+wAAAP8AAABmAAAAAAAA
        AAAAAABfAAAA/gAAAOoAAADtAAAA7QAAAO0AAACGAAAAAAAAAAUAAAAAAAAAmwAAAP8AAAD7AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD9AAAA8QAAAP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAA
        AGYAAAAAAAAAAAAAAGYAAAD/AAAA+wAAAP8AAAD/AAAA/QAAAP8AAABWAAAAAAAAAAAAAABbAAAA/wAA
        APwAAAD/AAAA/wAAAP8AAAD+AAAA/wAAAPEAAADWAAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        APsAAAD/AAAAZgAAAAAAAAAAAAAAZQAAAP8AAAD3AAAA+wAAAPsAAAD2AAAA/wAAAIIAAAAAAAAAAAAA
        AEoAAAD/AAAA/AAAAP8AAAD/AAAA/wAAAP4AAAD/AAAA1gAAAKcAAAD/AAAA/AAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA+wAAAP8AAABmAAAAAAAAAAAAAABmAAAA/wAAAPsAAAD/AAAA/wAAAP4AAAD/AAAAQQAA
        AAAAAAAAAAAAZAAAAP8AAAD7AAAA/wAAAP8AAAD/AAAA/AAAAP8AAACmAAAAYgAAAP8AAAD9AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAAAGYAAAAAAAAAAAAAAFAAAADWAAAAxQAAAMgAAADIAAAAxAAA
        AFkAAAAAAAAABgAAAAAAAACtAAAA/wAAAPwAAAD/AAAA/wAAAP8AAAD9AAAA/wAAAGIAAAAaAAAA6gAA
        AP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAAAPsAAAD/AAAAZwAAAAAAAAAFAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAcAAAAAAAAAQAAAAP8AAAD/AAAA/gAAAP8AAAD/AAAA/gAAAP8AAADqAAAAGgAA
        AAAAAACaAAAA/wAAAPsAAAD/AAAA/wAAAP8AAAD/AAAA+wAAAP8AAABmAAAAAAAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAADAAAADmAAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD7AAAA/wAA
        AJoAAAAAAAAAAAAAAC0AAAD6AAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD7AAAA/wAAAHEAAAABAAAAFQAA
        ABEAAAASAAAAEgAAABIAAAASAAAAFAAAAC8AAACIAAAA9QAAAP8AAAD+AAAA/wAAAP8AAAD/AAAA/gAA
        AP8AAAD6AAAALQAAAAAAAAADAAAAAAAAAIwAAAD/AAAA+gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA9QAA
        AOwAAADuAAAA7gAAAO4AAADuAAAA7gAAAO0AAADxAAAA/gAAAP8AAAD9AAAA/QAAAP8AAAD/AAAA/wAA
        AP8AAAD6AAAA/wAAAI0AAAAAAAAAAwAAAAEAAAAAAAAACgAAAM4AAAD/AAAA+wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA+wAAAP4AAAD/AAAA/wAA
        AP8AAAD/AAAA+wAAAP8AAADOAAAACgAAAAAAAAABAAAAAAAAAAIAAAAAAAAAKAAAAOoAAAD/AAAA+wAA
        AP8AAAD/AAAA/wAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAPsAAAD/AAAA6gAAACcAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAMAAAAAAAAANAAA
        AOsAAAD/AAAA+gAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP4AAAD6AAAA/wAAAOsAAAA0AAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAAAAAAAAJQAAANIAAAD/AAAA/AAAAPsAAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP4AAAD7AAAA/AAAAP8AAADSAAAAJQAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAACQAAAI0AAAD8AAAA/wAAAP8AAAD9AAAA/AAAAP4AAAD/AAAA/wAA
        AP8AAAD/AAAA/gAAAPwAAAD9AAAA/wAAAP8AAAD7AAAAjQAAAAkAAAAAAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAADAAAAAAAAACgAAACcAAAA7gAAAP8AAAD+AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAADvAAAAnAAAACgAAAAAAAAAAwAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAAAQAAAAAAAAAXAAAAYgAA
        AKgAAADYAAAA8gAAAP0AAAD9AAAA8gAAANgAAACpAAAAYwAAABcAAAAAAAAAAQAAAAMAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA9EACL+kAAJfUAAArqAAAFVAAAAqgAAAFQAAAAkAAAAKAAAABgBgAAQAY
        AAAAGAAAABgAAAAXIAAAF0gAABAUAAAYCgAAGAYAABgGAAAYBgAAGAoAABKkAIAXyAGAAAABQAAAAkAA
        AAKgAAAFUAAACqgAABXUAAAr6QAAl/RAAi8=
</value>
  </data>
</root>