<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAADjsAAA47AAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAAwAAAAAAAAAAAAAAAwAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAMAAAAAAAAAAAAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAADAAAAAAAAAAAAAAADAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAEAAAAAAAAADQAAAA0AAAAAAAAAAQAAAAIAAAAAAAAAAAAA
        AAIAAAABAAAAAAAAAA0AAAANAAAAAAAAAAEAAAACAAAAAAAAAAAAAAACAAAAAQAAAAAAAAANAAAADQAA
        AAAAAAABAAAAAgAAAAAAAAAAAAAAAAAAAAIAAAAAAAAALQAAALMAAADuAAAA7gAAALQAAAAtAAAAAAAA
        AAIAAAACAAAAAAAAAC0AAACzAAAA7gAAAO4AAAC0AAAALQAAAAAAAAACAAAAAgAAAAAAAAAtAAAAswAA
        AO4AAADuAAAAtAAAAC0AAAAAAAAAAgAAAAAAAAACAAAAAAAAAC4AAADwAAAA/wAAAPgAAAD4AAAA/wAA
        APAAAAAuAAAAAAAAAAAAAAAuAAAA8AAAAP8AAAD4AAAA+AAAAP8AAADwAAAALgAAAAAAAAAAAAAALQAA
        APAAAAD/AAAA+AAAAPgAAAD/AAAA8AAAAC4AAAAAAAAAAgAAAAMAAAAAAAAArQAAAP8AAACoAAAAFwAA
        ABcAAACoAAAA/wAAAKwAAAAAAAAAAAAAAK0AAAD/AAAAqAAAABcAAAAXAAAAqAAAAP8AAACsAAAAAAAA
        AAAAAACtAAAA/wAAAKgAAAAXAAAAGAAAAKgAAAD/AAAArQAAAAAAAAADAAAAAAAAAAsAAADpAAAA/AAA
        AB8AAAAAAAAAAAAAAB8AAAD8AAAA6QAAAAgAAAAIAAAA6QAAAPwAAAAfAAAAAAAAAAAAAAAfAAAA/AAA
        AOkAAAAIAAAACAAAAOkAAAD8AAAAHwAAAAAAAAAAAAAAHwAAAPwAAADpAAAACwAAAAAAAAAAAAAACwAA
        AOgAAAD8AAAAHwAAAAAAAAAAAAAAHwAAAPwAAADoAAAACAAAAAgAAADoAAAA/AAAAB8AAAAAAAAAAAAA
        AB8AAAD8AAAA6AAAAAgAAAAIAAAA6AAAAPwAAAAfAAAAAAAAAAAAAAAfAAAA/AAAAOgAAAALAAAAAAAA
        AAMAAAAAAAAAqgAAAP8AAACoAAAAGAAAABkAAACoAAAA/wAAAKoAAAAAAAAAAAAAAKoAAAD/AAAAqAAA
        ABgAAAAZAAAAqAAAAP8AAACqAAAAAAAAAAAAAACqAAAA/wAAAKgAAAAYAAAAGQAAAKgAAAD/AAAAqgAA
        AAAAAAADAAAAAgAAAAAAAAAqAAAA7QAAAP8AAAD1AAAA9QAAAP8AAADtAAAAKgAAAAAAAAAAAAAAKgAA
        AO0AAAD/AAAA9QAAAPUAAAD/AAAA7QAAACoAAAAAAAAAAAAAACoAAADtAAAA/wAAAPUAAAD1AAAA/wAA
        AO0AAAAqAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAAnAAAArwAAAP8AAAD/AAAAsAAAACcAAAAAAAAAAgAA
        AAIAAAAAAAAAJwAAAK8AAAD/AAAA/wAAALAAAAAnAAAAAAAAAAIAAAACAAAAAAAAACcAAACvAAAA/wAA
        AP8AAACwAAAAJwAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAQAAAA8QAAAPEAAAAQAAAAAAAA
        AAMAAAAAAAAAAAAAAAMAAAAAAAAAEAAAAPEAAADxAAAAEAAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAA
        ABAAAADxAAAA8QAAABAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABMAAADyAAAA8gAA
        ABQAAAAAAAAAAgAAAAEAAAABAAAAAgAAAAAAAAAUAAAA8gAAAPIAAAAUAAAAAAAAAAIAAAABAAAAAQAA
        AAIAAAAAAAAAFAAAAPIAAADyAAAAEwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAEAAA
        APIAAADyAAAAEAAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAA
        AAAAAAAAAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAAAAAARAAAA8AAAAPEAAAAfAAAADAAAABEAAAAQAAAAEAAAABEAAAAMAAAAHwAAAPMAAADzAAAAHwAA
        AAwAAAARAAAAEAAAABAAAAARAAAADAAAAB8AAADxAAAA8AAAABEAAAAAAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAAAAAAYAAADcAAAA/wAAAPEAAADyAAAA8gAAAPIAAADyAAAA8gAAAPIAAADzAAAA/gAA
        AP4AAADzAAAA8gAAAPIAAADyAAAA8gAAAPIAAADyAAAA8QAAAP8AAADcAAAABgAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAFIAAADmAAAA8gAAAPIAAADyAAAA8gAAAPIAAADyAAAA8gAA
        APMAAAD+AAAA/gAAAPMAAADyAAAA8gAAAPIAAADyAAAA8gAAAPIAAADyAAAA5gAAAFIAAAAAAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAgAAAARAAAAEAAAABAAAAAQAAAAEAAA
        ABEAAAAMAAAAHwAAAPMAAADzAAAAHwAAAAwAAAARAAAAEAAAABAAAAAQAAAAEAAAABEAAAAIAAAAAAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAQAAAACAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAgAAAAQAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAkAAAANAAAAHwAAAPIAAADyAAAAHwAAAA0AAAAJAAAAAAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAABRAAAA5gAAAPIAAADyAAAA/gAAAP4AAADyAAAA8gAA
        AOYAAABRAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAABgAAANwAAAD/AAAA8QAAAPIAAADuAAAA7gAA
        APIAAADxAAAA/wAAANwAAAAGAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAARAAAA8AAAAPEAAAAfAAAADAAA
        ABIAAAASAAAADAAAAB8AAADxAAAA8AAAABEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABAAAADxAAAA8gAA
        ABAAAAAAAAAAAQAAAAEAAAAAAAAAEAAAAPIAAADxAAAAEAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAEAAA
        APIAAADyAAAAEQAAAAAAAAACAAAAAgAAAAAAAAARAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAAAAAAQAAAA8gAAAPIAAAARAAAAAAAAAAIAAAACAAAAAAAAABEAAADyAAAA8gAAABAAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAAAAABAAAADxAAAA8gAAABAAAAAAAAAAAQAAAAEAAAAAAAAAEAAAAPIAAADxAAAAEAAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAAEQAAAPAAAADxAAAAHwAAAAwAAAARAAAAEQAAAAwAAAAfAAAA8QAA
        APAAAAARAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAGAAAA3AAAAP8AAADxAAAA8gAAAPIAAADyAAAA8gAA
        APEAAAD/AAAA3AAAAAYAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAABSAAAA5wAAAPMAAADzAAAA8wAA
        APMAAADzAAAA8wAAAOcAAABSAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAIAAAAEQAA
        ABAAAAAQAAAAEAAAABAAAAARAAAACAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAApkmSZUkyTJKgSBIFQDAMAkAwDAKGAYBhhgGAYUAwDAJAMAwCoEgSBVC0
        LQqQhCEJ0LQtC9AAAAvQAAALyAAAE9QAACvpdC6X9AQgL/9QCv//IAT//0AC//9AAv//QkL//0JC//9C
        Qv//QkL//0AC//9AAv//IAT//1AK//+lpf8=
</value>
  </data>
</root>